/* automatically generated by rust-bindgen */

pub type Enum_H5T_class_t = ::libc::c_int;
pub const H5T_NO_CLASS: ::libc::c_int = -1;
pub const H5T_INTEGER: ::libc::c_int = 0;
pub const H5T_FLOAT: ::libc::c_int = 1;
pub const H5T_TIME: ::libc::c_int = 2;
pub const H5T_STRING: ::libc::c_int = 3;
pub const H5T_BITFIELD: ::libc::c_int = 4;
pub const H5T_OPAQUE: ::libc::c_int = 5;
pub const H5T_COMPOUND: ::libc::c_int = 6;
pub const H5T_REFERENCE: ::libc::c_int = 7;
pub const H5T_ENUM: ::libc::c_int = 8;
pub const H5T_VLEN: ::libc::c_int = 9;
pub const H5T_ARRAY: ::libc::c_int = 10;
pub const H5T_NCLASSES: ::libc::c_int = 11;
pub type H5T_class_t = Enum_H5T_class_t;
pub type Enum_H5T_order_t = ::libc::c_int;
pub const H5T_ORDER_ERROR: ::libc::c_int = -1;
pub const H5T_ORDER_LE: ::libc::c_int = 0;
pub const H5T_ORDER_BE: ::libc::c_int = 1;
pub const H5T_ORDER_VAX: ::libc::c_int = 2;
pub const H5T_ORDER_MIXED: ::libc::c_int = 3;
pub const H5T_ORDER_NONE: ::libc::c_int = 4;
pub type H5T_order_t = Enum_H5T_order_t;
pub type Enum_H5T_sign_t = ::libc::c_int;
pub const H5T_SGN_ERROR: ::libc::c_int = -1;
pub const H5T_SGN_NONE: ::libc::c_int = 0;
pub const H5T_SGN_2: ::libc::c_int = 1;
pub const H5T_NSGN: ::libc::c_int = 2;
pub type H5T_sign_t = Enum_H5T_sign_t;
pub type Enum_H5T_norm_t = ::libc::c_int;
pub const H5T_NORM_ERROR: ::libc::c_int = -1;
pub const H5T_NORM_IMPLIED: ::libc::c_int = 0;
pub const H5T_NORM_MSBSET: ::libc::c_int = 1;
pub const H5T_NORM_NONE: ::libc::c_int = 2;
pub type H5T_norm_t = Enum_H5T_norm_t;
pub type Enum_H5T_cset_t = ::libc::c_int;
pub const H5T_CSET_ERROR: ::libc::c_int = -1;
pub const H5T_CSET_ASCII: ::libc::c_int = 0;
pub const H5T_CSET_UTF8: ::libc::c_int = 1;
pub const H5T_CSET_RESERVED_2: ::libc::c_int = 2;
pub const H5T_CSET_RESERVED_3: ::libc::c_int = 3;
pub const H5T_CSET_RESERVED_4: ::libc::c_int = 4;
pub const H5T_CSET_RESERVED_5: ::libc::c_int = 5;
pub const H5T_CSET_RESERVED_6: ::libc::c_int = 6;
pub const H5T_CSET_RESERVED_7: ::libc::c_int = 7;
pub const H5T_CSET_RESERVED_8: ::libc::c_int = 8;
pub const H5T_CSET_RESERVED_9: ::libc::c_int = 9;
pub const H5T_CSET_RESERVED_10: ::libc::c_int = 10;
pub const H5T_CSET_RESERVED_11: ::libc::c_int = 11;
pub const H5T_CSET_RESERVED_12: ::libc::c_int = 12;
pub const H5T_CSET_RESERVED_13: ::libc::c_int = 13;
pub const H5T_CSET_RESERVED_14: ::libc::c_int = 14;
pub const H5T_CSET_RESERVED_15: ::libc::c_int = 15;
pub type H5T_cset_t = Enum_H5T_cset_t;
pub type Enum_H5T_str_t = ::libc::c_int;
pub const H5T_STR_ERROR: ::libc::c_int = -1;
pub const H5T_STR_NULLTERM: ::libc::c_int = 0;
pub const H5T_STR_NULLPAD: ::libc::c_int = 1;
pub const H5T_STR_SPACEPAD: ::libc::c_int = 2;
pub const H5T_STR_RESERVED_3: ::libc::c_int = 3;
pub const H5T_STR_RESERVED_4: ::libc::c_int = 4;
pub const H5T_STR_RESERVED_5: ::libc::c_int = 5;
pub const H5T_STR_RESERVED_6: ::libc::c_int = 6;
pub const H5T_STR_RESERVED_7: ::libc::c_int = 7;
pub const H5T_STR_RESERVED_8: ::libc::c_int = 8;
pub const H5T_STR_RESERVED_9: ::libc::c_int = 9;
pub const H5T_STR_RESERVED_10: ::libc::c_int = 10;
pub const H5T_STR_RESERVED_11: ::libc::c_int = 11;
pub const H5T_STR_RESERVED_12: ::libc::c_int = 12;
pub const H5T_STR_RESERVED_13: ::libc::c_int = 13;
pub const H5T_STR_RESERVED_14: ::libc::c_int = 14;
pub const H5T_STR_RESERVED_15: ::libc::c_int = 15;
pub type H5T_str_t = Enum_H5T_str_t;
pub type Enum_H5T_pad_t = ::libc::c_int;
pub const H5T_PAD_ERROR: ::libc::c_int = -1;
pub const H5T_PAD_ZERO: ::libc::c_int = 0;
pub const H5T_PAD_ONE: ::libc::c_int = 1;
pub const H5T_PAD_BACKGROUND: ::libc::c_int = 2;
pub const H5T_NPAD: ::libc::c_int = 3;
pub type H5T_pad_t = Enum_H5T_pad_t;
pub type Enum_H5T_cmd_t = ::libc::c_uint;
pub const H5T_CONV_INIT: ::libc::c_uint = 0;
pub const H5T_CONV_CONV: ::libc::c_uint = 1;
pub const H5T_CONV_FREE: ::libc::c_uint = 2;
pub type H5T_cmd_t = Enum_H5T_cmd_t;
pub type Enum_H5T_bkg_t = ::libc::c_uint;
pub const H5T_BKG_NO: ::libc::c_uint = 0;
pub const H5T_BKG_TEMP: ::libc::c_uint = 1;
pub const H5T_BKG_YES: ::libc::c_uint = 2;
pub type H5T_bkg_t = Enum_H5T_bkg_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_H5T_cdata_t {
    pub command: H5T_cmd_t,
    pub need_bkg: H5T_bkg_t,
    pub recalc: hbool_t,
    pub _priv: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct_H5T_cdata_t {
    fn clone(&self) -> Struct_H5T_cdata_t { *self }
}
impl ::std::default::Default for Struct_H5T_cdata_t {
    fn default() -> Struct_H5T_cdata_t { unsafe { ::std::mem::zeroed() } }
}
pub type H5T_cdata_t = Struct_H5T_cdata_t;
pub type Enum_H5T_pers_t = ::libc::c_int;
pub const H5T_PERS_DONTCARE: ::libc::c_int = -1;
pub const H5T_PERS_HARD: ::libc::c_int = 0;
pub const H5T_PERS_SOFT: ::libc::c_int = 1;
pub type H5T_pers_t = Enum_H5T_pers_t;
pub type Enum_H5T_direction_t = ::libc::c_uint;
pub const H5T_DIR_DEFAULT: ::libc::c_uint = 0;
pub const H5T_DIR_ASCEND: ::libc::c_uint = 1;
pub const H5T_DIR_DESCEND: ::libc::c_uint = 2;
pub type H5T_direction_t = Enum_H5T_direction_t;
pub type Enum_H5T_conv_except_t = ::libc::c_uint;
pub const H5T_CONV_EXCEPT_RANGE_HI: ::libc::c_uint = 0;
pub const H5T_CONV_EXCEPT_RANGE_LOW: ::libc::c_uint = 1;
pub const H5T_CONV_EXCEPT_PRECISION: ::libc::c_uint = 2;
pub const H5T_CONV_EXCEPT_TRUNCATE: ::libc::c_uint = 3;
pub const H5T_CONV_EXCEPT_PINF: ::libc::c_uint = 4;
pub const H5T_CONV_EXCEPT_NINF: ::libc::c_uint = 5;
pub const H5T_CONV_EXCEPT_NAN: ::libc::c_uint = 6;
pub type H5T_conv_except_t = Enum_H5T_conv_except_t;
pub type Enum_H5T_conv_ret_t = ::libc::c_int;
pub const H5T_CONV_ABORT: ::libc::c_int = -1;
pub const H5T_CONV_UNHANDLED: ::libc::c_int = 0;
pub const H5T_CONV_HANDLED: ::libc::c_int = 1;
pub type H5T_conv_ret_t = Enum_H5T_conv_ret_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_H5Tpublic_Unnamed1 {
    pub len: size_t,
    pub p: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct_H5Tpublic_Unnamed1 {
    fn clone(&self) -> Struct_H5Tpublic_Unnamed1 { *self }
}
impl ::std::default::Default for Struct_H5Tpublic_Unnamed1 {
    fn default() -> Struct_H5Tpublic_Unnamed1 { unsafe { ::std::mem::zeroed() } }
}
pub type hvl_t = Struct_H5Tpublic_Unnamed1;
pub type H5T_conv_t =
    ::std::option::Option<extern "C" fn(src_id: hid_t, dst_id: hid_t,
                                        cdata: *mut H5T_cdata_t,
                                        nelmts: size_t, buf_stride: size_t,
                                        bkg_stride: size_t,
                                        buf: *mut ::libc::c_void,
                                        bkg: *mut ::libc::c_void,
                                        dset_xfer_plist: hid_t) -> herr_t>;
pub type H5T_conv_except_func_t =
    ::std::option::Option<extern "C" fn(except_type: H5T_conv_except_t,
                                        src_id: hid_t, dst_id: hid_t,
                                        src_buf: *mut ::libc::c_void,
                                        dst_buf: *mut ::libc::c_void,
                                        user_data: *mut ::libc::c_void)
                              -> H5T_conv_ret_t>;

extern "C" {
    pub static mut H5T_IEEE_F32BE_g: hid_t;
    pub static mut H5T_IEEE_F32LE_g: hid_t;
    pub static mut H5T_IEEE_F64BE_g: hid_t;
    pub static mut H5T_IEEE_F64LE_g: hid_t;
    pub static mut H5T_STD_I8BE_g: hid_t;
    pub static mut H5T_STD_I8LE_g: hid_t;
    pub static mut H5T_STD_I16BE_g: hid_t;
    pub static mut H5T_STD_I16LE_g: hid_t;
    pub static mut H5T_STD_I32BE_g: hid_t;
    pub static mut H5T_STD_I32LE_g: hid_t;
    pub static mut H5T_STD_I64BE_g: hid_t;
    pub static mut H5T_STD_I64LE_g: hid_t;
    pub static mut H5T_STD_U8BE_g: hid_t;
    pub static mut H5T_STD_U8LE_g: hid_t;
    pub static mut H5T_STD_U16BE_g: hid_t;
    pub static mut H5T_STD_U16LE_g: hid_t;
    pub static mut H5T_STD_U32BE_g: hid_t;
    pub static mut H5T_STD_U32LE_g: hid_t;
    pub static mut H5T_STD_U64BE_g: hid_t;
    pub static mut H5T_STD_U64LE_g: hid_t;
    pub static mut H5T_STD_B8BE_g: hid_t;
    pub static mut H5T_STD_B8LE_g: hid_t;
    pub static mut H5T_STD_B16BE_g: hid_t;
    pub static mut H5T_STD_B16LE_g: hid_t;
    pub static mut H5T_STD_B32BE_g: hid_t;
    pub static mut H5T_STD_B32LE_g: hid_t;
    pub static mut H5T_STD_B64BE_g: hid_t;
    pub static mut H5T_STD_B64LE_g: hid_t;
    pub static mut H5T_STD_REF_OBJ_g: hid_t;
    pub static mut H5T_STD_REF_DSETREG_g: hid_t;
    pub static mut H5T_UNIX_D32BE_g: hid_t;
    pub static mut H5T_UNIX_D32LE_g: hid_t;
    pub static mut H5T_UNIX_D64BE_g: hid_t;
    pub static mut H5T_UNIX_D64LE_g: hid_t;
    pub static mut H5T_C_S1_g: hid_t;
    pub static mut H5T_FORTRAN_S1_g: hid_t;
    pub static mut H5T_VAX_F32_g: hid_t;
    pub static mut H5T_VAX_F64_g: hid_t;
    pub static mut H5T_NATIVE_SCHAR_g: hid_t;
    pub static mut H5T_NATIVE_UCHAR_g: hid_t;
    pub static mut H5T_NATIVE_SHORT_g: hid_t;
    pub static mut H5T_NATIVE_USHORT_g: hid_t;
    pub static mut H5T_NATIVE_INT_g: hid_t;
    pub static mut H5T_NATIVE_UINT_g: hid_t;
    pub static mut H5T_NATIVE_LONG_g: hid_t;
    pub static mut H5T_NATIVE_ULONG_g: hid_t;
    pub static mut H5T_NATIVE_LLONG_g: hid_t;
    pub static mut H5T_NATIVE_ULLONG_g: hid_t;
    pub static mut H5T_NATIVE_FLOAT_g: hid_t;
    pub static mut H5T_NATIVE_DOUBLE_g: hid_t;
    pub static mut H5T_NATIVE_LDOUBLE_g: hid_t;
    pub static mut H5T_NATIVE_B8_g: hid_t;
    pub static mut H5T_NATIVE_B16_g: hid_t;
    pub static mut H5T_NATIVE_B32_g: hid_t;
    pub static mut H5T_NATIVE_B64_g: hid_t;
    pub static mut H5T_NATIVE_OPAQUE_g: hid_t;
    pub static mut H5T_NATIVE_HADDR_g: hid_t;
    pub static mut H5T_NATIVE_HSIZE_g: hid_t;
    pub static mut H5T_NATIVE_HSSIZE_g: hid_t;
    pub static mut H5T_NATIVE_HERR_g: hid_t;
    pub static mut H5T_NATIVE_HBOOL_g: hid_t;
    pub static mut H5T_NATIVE_INT8_g: hid_t;
    pub static mut H5T_NATIVE_UINT8_g: hid_t;
    pub static mut H5T_NATIVE_INT_LEAST8_g: hid_t;
    pub static mut H5T_NATIVE_UINT_LEAST8_g: hid_t;
    pub static mut H5T_NATIVE_INT_FAST8_g: hid_t;
    pub static mut H5T_NATIVE_UINT_FAST8_g: hid_t;
    pub static mut H5T_NATIVE_INT16_g: hid_t;
    pub static mut H5T_NATIVE_UINT16_g: hid_t;
    pub static mut H5T_NATIVE_INT_LEAST16_g: hid_t;
    pub static mut H5T_NATIVE_UINT_LEAST16_g: hid_t;
    pub static mut H5T_NATIVE_INT_FAST16_g: hid_t;
    pub static mut H5T_NATIVE_UINT_FAST16_g: hid_t;
    pub static mut H5T_NATIVE_INT32_g: hid_t;
    pub static mut H5T_NATIVE_UINT32_g: hid_t;
    pub static mut H5T_NATIVE_INT_LEAST32_g: hid_t;
    pub static mut H5T_NATIVE_UINT_LEAST32_g: hid_t;
    pub static mut H5T_NATIVE_INT_FAST32_g: hid_t;
    pub static mut H5T_NATIVE_UINT_FAST32_g: hid_t;
    pub static mut H5T_NATIVE_INT64_g: hid_t;
    pub static mut H5T_NATIVE_UINT64_g: hid_t;
    pub static mut H5T_NATIVE_INT_LEAST64_g: hid_t;
    pub static mut H5T_NATIVE_UINT_LEAST64_g: hid_t;
    pub static mut H5T_NATIVE_INT_FAST64_g: hid_t;
    pub static mut H5T_NATIVE_UINT_FAST64_g: hid_t;
}

extern "C" {
    pub fn H5Tcreate(_type: H5T_class_t, size: size_t) -> hid_t;
    pub fn H5Tcopy(type_id: hid_t) -> hid_t;
    pub fn H5Tclose(type_id: hid_t) -> herr_t;
    pub fn H5Tequal(type1_id: hid_t, type2_id: hid_t) -> htri_t;
    pub fn H5Tlock(type_id: hid_t) -> herr_t;
    pub fn H5Tcommit2(loc_id: hid_t, name: *const ::libc::c_char,
                      type_id: hid_t, lcpl_id: hid_t, tcpl_id: hid_t,
                      tapl_id: hid_t) -> herr_t;
    pub fn H5Topen2(loc_id: hid_t, name: *const ::libc::c_char,
                    tapl_id: hid_t) -> hid_t;
    pub fn H5Tcommit_anon(loc_id: hid_t, type_id: hid_t, tcpl_id: hid_t,
                          tapl_id: hid_t) -> herr_t;
    pub fn H5Tget_create_plist(type_id: hid_t) -> hid_t;
    pub fn H5Tcommitted(type_id: hid_t) -> htri_t;
    pub fn H5Tencode(obj_id: hid_t, buf: *mut ::libc::c_void,
                     nalloc: *mut size_t) -> herr_t;
    pub fn H5Tdecode(buf: *const ::libc::c_void) -> hid_t;
    pub fn H5Tinsert(parent_id: hid_t, name: *const ::libc::c_char,
                     offset: size_t, member_id: hid_t) -> herr_t;
    pub fn H5Tpack(type_id: hid_t) -> herr_t;
    pub fn H5Tenum_create(base_id: hid_t) -> hid_t;
    pub fn H5Tenum_insert(_type: hid_t, name: *const ::libc::c_char,
                          value: *const ::libc::c_void) -> herr_t;
    pub fn H5Tenum_nameof(_type: hid_t, value: *const ::libc::c_void,
                          name: *mut ::libc::c_char, size: size_t) -> herr_t;
    pub fn H5Tenum_valueof(_type: hid_t, name: *const ::libc::c_char,
                           value: *mut ::libc::c_void) -> herr_t;
    pub fn H5Tvlen_create(base_id: hid_t) -> hid_t;
    pub fn H5Tarray_create2(base_id: hid_t, ndims: ::libc::c_uint,
                            dim: *const hsize_t) -> hid_t;
    pub fn H5Tget_array_ndims(type_id: hid_t) -> ::libc::c_int;
    pub fn H5Tget_array_dims2(type_id: hid_t, dims: *mut hsize_t)
     -> ::libc::c_int;
    pub fn H5Tset_tag(_type: hid_t, tag: *const ::libc::c_char) -> herr_t;
    pub fn H5Tget_tag(_type: hid_t) -> *mut ::libc::c_char;
    pub fn H5Tget_super(_type: hid_t) -> hid_t;
    pub fn H5Tget_class(type_id: hid_t) -> H5T_class_t;
    pub fn H5Tdetect_class(type_id: hid_t, cls: H5T_class_t) -> htri_t;
    pub fn H5Tget_size(type_id: hid_t) -> size_t;
    pub fn H5Tget_order(type_id: hid_t) -> H5T_order_t;
    pub fn H5Tget_precision(type_id: hid_t) -> size_t;
    pub fn H5Tget_offset(type_id: hid_t) -> ::libc::c_int;
    pub fn H5Tget_pad(type_id: hid_t, lsb: *mut H5T_pad_t,
                      msb: *mut H5T_pad_t) -> herr_t;
    pub fn H5Tget_sign(type_id: hid_t) -> H5T_sign_t;
    pub fn H5Tget_fields(type_id: hid_t, spos: *mut size_t, epos: *mut size_t,
                         esize: *mut size_t, mpos: *mut size_t,
                         msize: *mut size_t) -> herr_t;
    pub fn H5Tget_ebias(type_id: hid_t) -> size_t;
    pub fn H5Tget_norm(type_id: hid_t) -> H5T_norm_t;
    pub fn H5Tget_inpad(type_id: hid_t) -> H5T_pad_t;
    pub fn H5Tget_strpad(type_id: hid_t) -> H5T_str_t;
    pub fn H5Tget_nmembers(type_id: hid_t) -> ::libc::c_int;
    pub fn H5Tget_member_name(type_id: hid_t, membno: ::libc::c_uint)
     -> *mut ::libc::c_char;
    pub fn H5Tget_member_index(type_id: hid_t, name: *const ::libc::c_char)
     -> ::libc::c_int;
    pub fn H5Tget_member_offset(type_id: hid_t, membno: ::libc::c_uint)
     -> size_t;
    pub fn H5Tget_member_class(type_id: hid_t, membno: ::libc::c_uint)
     -> H5T_class_t;
    pub fn H5Tget_member_type(type_id: hid_t, membno: ::libc::c_uint)
     -> hid_t;
    pub fn H5Tget_member_value(type_id: hid_t, membno: ::libc::c_uint,
                               value: *mut ::libc::c_void) -> herr_t;
    pub fn H5Tget_cset(type_id: hid_t) -> H5T_cset_t;
    pub fn H5Tis_variable_str(type_id: hid_t) -> htri_t;
    pub fn H5Tget_native_type(type_id: hid_t, direction: H5T_direction_t)
     -> hid_t;
    pub fn H5Tset_size(type_id: hid_t, size: size_t) -> herr_t;
    pub fn H5Tset_order(type_id: hid_t, order: H5T_order_t) -> herr_t;
    pub fn H5Tset_precision(type_id: hid_t, prec: size_t) -> herr_t;
    pub fn H5Tset_offset(type_id: hid_t, offset: size_t) -> herr_t;
    pub fn H5Tset_pad(type_id: hid_t, lsb: H5T_pad_t, msb: H5T_pad_t)
     -> herr_t;
    pub fn H5Tset_sign(type_id: hid_t, sign: H5T_sign_t) -> herr_t;
    pub fn H5Tset_fields(type_id: hid_t, spos: size_t, epos: size_t,
                         esize: size_t, mpos: size_t, msize: size_t)
     -> herr_t;
    pub fn H5Tset_ebias(type_id: hid_t, ebias: size_t) -> herr_t;
    pub fn H5Tset_norm(type_id: hid_t, norm: H5T_norm_t) -> herr_t;
    pub fn H5Tset_inpad(type_id: hid_t, pad: H5T_pad_t) -> herr_t;
    pub fn H5Tset_cset(type_id: hid_t, cset: H5T_cset_t) -> herr_t;
    pub fn H5Tset_strpad(type_id: hid_t, strpad: H5T_str_t) -> herr_t;
    pub fn H5Tregister(pers: H5T_pers_t, name: *const ::libc::c_char,
                       src_id: hid_t, dst_id: hid_t, func: H5T_conv_t)
     -> herr_t;
    pub fn H5Tunregister(pers: H5T_pers_t, name: *const ::libc::c_char,
                         src_id: hid_t, dst_id: hid_t, func: H5T_conv_t)
     -> herr_t;
    pub fn H5Tfind(src_id: hid_t, dst_id: hid_t,
                   pcdata: *mut *mut H5T_cdata_t) -> H5T_conv_t;
    pub fn H5Tcompiler_conv(src_id: hid_t, dst_id: hid_t) -> htri_t;
    pub fn H5Tconvert(src_id: hid_t, dst_id: hid_t, nelmts: size_t,
                      buf: *mut ::libc::c_void,
                      background: *mut ::libc::c_void, plist_id: hid_t)
     -> herr_t;
    pub fn H5Tcommit1(loc_id: hid_t, name: *const ::libc::c_char,
                      type_id: hid_t) -> herr_t;
    pub fn H5Topen1(loc_id: hid_t, name: *const ::libc::c_char) -> hid_t;
    pub fn H5Tarray_create1(base_id: hid_t, ndims: ::libc::c_int,
                            dim: *const hsize_t, perm: *const ::libc::c_int)
     -> hid_t;
    pub fn H5Tget_array_dims1(type_id: hid_t, dims: *mut hsize_t,
                              perm: *mut ::libc::c_int) -> ::libc::c_int;
}
