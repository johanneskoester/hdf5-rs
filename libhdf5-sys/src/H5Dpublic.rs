/* automatically generated by rust-bindgen */

pub type Enum_H5D_layout_t = ::libc::c_int;
pub const H5D_LAYOUT_ERROR: ::libc::c_int = -1;
pub const H5D_COMPACT: ::libc::c_int = 0;
pub const H5D_CONTIGUOUS: ::libc::c_int = 1;
pub const H5D_CHUNKED: ::libc::c_int = 2;
pub const H5D_NLAYOUTS: ::libc::c_int = 3;
pub type H5D_layout_t = Enum_H5D_layout_t;
pub type Enum_H5D_chunk_index_t = ::libc::c_uint;
pub const H5D_CHUNK_BTREE: ::libc::c_uint = 0;
pub type H5D_chunk_index_t = Enum_H5D_chunk_index_t;
pub type Enum_H5D_alloc_time_t = ::libc::c_int;
pub const H5D_ALLOC_TIME_ERROR: ::libc::c_int = -1;
pub const H5D_ALLOC_TIME_DEFAULT: ::libc::c_int = 0;
pub const H5D_ALLOC_TIME_EARLY: ::libc::c_int = 1;
pub const H5D_ALLOC_TIME_LATE: ::libc::c_int = 2;
pub const H5D_ALLOC_TIME_INCR: ::libc::c_int = 3;
pub type H5D_alloc_time_t = Enum_H5D_alloc_time_t;
pub type Enum_H5D_space_status_t = ::libc::c_int;
pub const H5D_SPACE_STATUS_ERROR: ::libc::c_int = -1;
pub const H5D_SPACE_STATUS_NOT_ALLOCATED: ::libc::c_int = 0;
pub const H5D_SPACE_STATUS_PART_ALLOCATED: ::libc::c_int = 1;
pub const H5D_SPACE_STATUS_ALLOCATED: ::libc::c_int = 2;
pub type H5D_space_status_t = Enum_H5D_space_status_t;
pub type Enum_H5D_fill_time_t = ::libc::c_int;
pub const H5D_FILL_TIME_ERROR: ::libc::c_int = -1;
pub const H5D_FILL_TIME_ALLOC: ::libc::c_int = 0;
pub const H5D_FILL_TIME_NEVER: ::libc::c_int = 1;
pub const H5D_FILL_TIME_IFSET: ::libc::c_int = 2;
pub type H5D_fill_time_t = Enum_H5D_fill_time_t;
pub type Enum_H5D_fill_value_t = ::libc::c_int;
pub const H5D_FILL_VALUE_ERROR: ::libc::c_int = -1;
pub const H5D_FILL_VALUE_UNDEFINED: ::libc::c_int = 0;
pub const H5D_FILL_VALUE_DEFAULT: ::libc::c_int = 1;
pub const H5D_FILL_VALUE_USER_DEFINED: ::libc::c_int = 2;
pub type H5D_fill_value_t = Enum_H5D_fill_value_t;
pub type H5D_operator_t =
    ::std::option::Option<extern "C" fn(elem: *mut ::libc::c_void,
                                        type_id: hid_t, ndim: ::libc::c_uint,
                                        point: *const hsize_t,
                                        operator_data: *mut ::libc::c_void)
                              -> herr_t>;
pub type H5D_scatter_func_t =
    ::std::option::Option<extern "C" fn(src_buf: *mut *const ::libc::c_void,
                                        src_buf_bytes_used: *mut size_t,
                                        op_data: *mut ::libc::c_void)
                              -> herr_t>;
pub type H5D_gather_func_t =
    ::std::option::Option<extern "C" fn(dst_buf: *const ::libc::c_void,
                                        dst_buf_bytes_used: size_t,
                                        op_data: *mut ::libc::c_void)
                              -> herr_t>;
#[link(name = "hdf5")]
extern "C" {
    pub fn H5Dcreate2(loc_id: hid_t, name: *const ::libc::c_char,
                      type_id: hid_t, space_id: hid_t, lcpl_id: hid_t,
                      dcpl_id: hid_t, dapl_id: hid_t) -> hid_t;
    pub fn H5Dcreate_anon(file_id: hid_t, type_id: hid_t, space_id: hid_t,
                          plist_id: hid_t, dapl_id: hid_t) -> hid_t;
    pub fn H5Dopen2(file_id: hid_t, name: *const ::libc::c_char,
                    dapl_id: hid_t) -> hid_t;
    pub fn H5Dclose(dset_id: hid_t) -> herr_t;
    pub fn H5Dget_space(dset_id: hid_t) -> hid_t;
    pub fn H5Dget_space_status(dset_id: hid_t,
                               allocation: *mut H5D_space_status_t) -> herr_t;
    pub fn H5Dget_type(dset_id: hid_t) -> hid_t;
    pub fn H5Dget_create_plist(dset_id: hid_t) -> hid_t;
    pub fn H5Dget_access_plist(dset_id: hid_t) -> hid_t;
    pub fn H5Dget_storage_size(dset_id: hid_t) -> hsize_t;
    pub fn H5Dget_offset(dset_id: hid_t) -> haddr_t;
    pub fn H5Dread(dset_id: hid_t, mem_type_id: hid_t, mem_space_id: hid_t,
                   file_space_id: hid_t, plist_id: hid_t,
                   buf: *mut ::libc::c_void) -> herr_t;
    pub fn H5Dwrite(dset_id: hid_t, mem_type_id: hid_t, mem_space_id: hid_t,
                    file_space_id: hid_t, plist_id: hid_t,
                    buf: *const ::libc::c_void) -> herr_t;
    pub fn H5Diterate(buf: *mut ::libc::c_void, type_id: hid_t,
                      space_id: hid_t, op: H5D_operator_t,
                      operator_data: *mut ::libc::c_void) -> herr_t;
    pub fn H5Dvlen_reclaim(type_id: hid_t, space_id: hid_t, plist_id: hid_t,
                           buf: *mut ::libc::c_void) -> herr_t;
    pub fn H5Dvlen_get_buf_size(dataset_id: hid_t, type_id: hid_t,
                                space_id: hid_t, size: *mut hsize_t)
     -> herr_t;
    pub fn H5Dfill(fill: *const ::libc::c_void, fill_type: hid_t,
                   buf: *mut ::libc::c_void, buf_type: hid_t, space: hid_t)
     -> herr_t;
    pub fn H5Dset_extent(dset_id: hid_t, size: *const hsize_t) -> herr_t;
    pub fn H5Dscatter(op: H5D_scatter_func_t, op_data: *mut ::libc::c_void,
                      type_id: hid_t, dst_space_id: hid_t,
                      dst_buf: *mut ::libc::c_void) -> herr_t;
    pub fn H5Dgather(src_space_id: hid_t, src_buf: *const ::libc::c_void,
                     type_id: hid_t, dst_buf_size: size_t,
                     dst_buf: *mut ::libc::c_void, op: H5D_gather_func_t,
                     op_data: *mut ::libc::c_void) -> herr_t;
    pub fn H5Ddebug(dset_id: hid_t) -> herr_t;
    pub fn H5Dcreate1(file_id: hid_t, name: *const ::libc::c_char,
                      type_id: hid_t, space_id: hid_t, dcpl_id: hid_t)
     -> hid_t;
    pub fn H5Dopen1(file_id: hid_t, name: *const ::libc::c_char) -> hid_t;
    pub fn H5Dextend(dset_id: hid_t, size: *const hsize_t) -> herr_t;
}
