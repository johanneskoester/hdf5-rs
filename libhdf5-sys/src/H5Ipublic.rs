/* automatically generated by rust-bindgen */

pub type Enum_H5I_type_t = ::libc::c_int;
pub const H5I_UNINIT: ::libc::c_int = -2;
pub const H5I_BADID: ::libc::c_int = -1;
pub const H5I_FILE: ::libc::c_int = 1;
pub const H5I_GROUP: ::libc::c_int = 2;
pub const H5I_DATATYPE: ::libc::c_int = 3;
pub const H5I_DATASPACE: ::libc::c_int = 4;
pub const H5I_DATASET: ::libc::c_int = 5;
pub const H5I_ATTR: ::libc::c_int = 6;
pub const H5I_REFERENCE: ::libc::c_int = 7;
pub const H5I_VFL: ::libc::c_int = 8;
pub const H5I_GENPROP_CLS: ::libc::c_int = 9;
pub const H5I_GENPROP_LST: ::libc::c_int = 10;
pub const H5I_ERROR_CLASS: ::libc::c_int = 11;
pub const H5I_ERROR_MSG: ::libc::c_int = 12;
pub const H5I_ERROR_STACK: ::libc::c_int = 13;
pub const H5I_NTYPES: ::libc::c_int = 14;
pub type H5I_type_t = Enum_H5I_type_t;
pub type hid_t = ::libc::c_int;
pub type H5I_free_t =
    ::std::option::Option<extern "C" fn(arg1: *mut ::libc::c_void) -> herr_t>;
pub type H5I_search_func_t =
    ::std::option::Option<extern "C" fn(obj: *mut ::libc::c_void, id: hid_t,
                                        key: *mut ::libc::c_void)
                              -> ::libc::c_int>;
#[link(name = "hdf5")]
extern "C" {
    pub fn H5Iregister(_type: H5I_type_t, object: *const ::libc::c_void)
     -> hid_t;
    pub fn H5Iobject_verify(id: hid_t, id_type: H5I_type_t)
     -> *mut ::libc::c_void;
    pub fn H5Iremove_verify(id: hid_t, id_type: H5I_type_t)
     -> *mut ::libc::c_void;
    pub fn H5Iget_type(id: hid_t) -> H5I_type_t;
    pub fn H5Iget_file_id(id: hid_t) -> hid_t;
    pub fn H5Iget_name(id: hid_t, name: *mut ::libc::c_char, size: size_t)
     -> ssize_t;
    pub fn H5Iinc_ref(id: hid_t) -> ::libc::c_int;
    pub fn H5Idec_ref(id: hid_t) -> ::libc::c_int;
    pub fn H5Iget_ref(id: hid_t) -> ::libc::c_int;
    pub fn H5Iregister_type(hash_size: size_t, reserved: ::libc::c_uint,
                            free_func: H5I_free_t) -> H5I_type_t;
    pub fn H5Iclear_type(_type: H5I_type_t, force: hbool_t) -> herr_t;
    pub fn H5Idestroy_type(_type: H5I_type_t) -> herr_t;
    pub fn H5Iinc_type_ref(_type: H5I_type_t) -> ::libc::c_int;
    pub fn H5Idec_type_ref(_type: H5I_type_t) -> ::libc::c_int;
    pub fn H5Iget_type_ref(_type: H5I_type_t) -> ::libc::c_int;
    pub fn H5Isearch(_type: H5I_type_t, func: H5I_search_func_t,
                     key: *mut ::libc::c_void) -> *mut ::libc::c_void;
    pub fn H5Inmembers(_type: H5I_type_t, num_members: *mut hsize_t)
     -> herr_t;
    pub fn H5Itype_exists(_type: H5I_type_t) -> htri_t;
    pub fn H5Iis_valid(id: hid_t) -> htri_t;
}
