/* automatically generated by rust-bindgen */

pub type herr_t = ::libc::c_int;
pub type hbool_t = ::libc::c_uint;
pub type htri_t = ::libc::c_int;
pub type hsize_t = ::libc::c_ulonglong;
pub type hssize_t = ::libc::c_longlong;
pub type haddr_t = uint64_t;
pub type Enum_H5public_Unnamed1 = ::libc::c_int;
pub const H5_ITER_UNKNOWN: ::libc::c_int = -1;
pub const H5_ITER_INC: ::libc::c_int = 0;
pub const H5_ITER_DEC: ::libc::c_int = 1;
pub const H5_ITER_NATIVE: ::libc::c_int = 2;
pub const H5_ITER_N: ::libc::c_int = 3;
pub type H5_iter_order_t = Enum_H5public_Unnamed1;
pub type Enum_H5_index_t = ::libc::c_int;
pub const H5_INDEX_UNKNOWN: ::libc::c_int = -1;
pub const H5_INDEX_NAME: ::libc::c_int = 0;
pub const H5_INDEX_CRT_ORDER: ::libc::c_int = 1;
pub const H5_INDEX_N: ::libc::c_int = 2;
pub type H5_index_t = Enum_H5_index_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_H5_ih_info_t {
    pub index_size: hsize_t,
    pub heap_size: hsize_t,
}
impl ::std::clone::Clone for Struct_H5_ih_info_t {
    fn clone(&self) -> Struct_H5_ih_info_t { *self }
}
impl ::std::default::Default for Struct_H5_ih_info_t {
    fn default() -> Struct_H5_ih_info_t { unsafe { ::std::mem::zeroed() } }
}
pub type H5_ih_info_t = Struct_H5_ih_info_t;

extern "C" {
    pub fn H5open() -> herr_t;
    pub fn H5close() -> herr_t;
    pub fn H5dont_atexit() -> herr_t;
    pub fn H5garbage_collect() -> herr_t;
    pub fn H5set_free_list_limits(reg_global_lim: ::libc::c_int,
                                  reg_list_lim: ::libc::c_int,
                                  arr_global_lim: ::libc::c_int,
                                  arr_list_lim: ::libc::c_int,
                                  blk_global_lim: ::libc::c_int,
                                  blk_list_lim: ::libc::c_int) -> herr_t;
    pub fn H5get_libversion(majnum: *mut ::libc::c_uint,
                            minnum: *mut ::libc::c_uint,
                            relnum: *mut ::libc::c_uint) -> herr_t;
    pub fn H5check_version(majnum: ::libc::c_uint, minnum: ::libc::c_uint,
                           relnum: ::libc::c_uint) -> herr_t;
    pub fn H5free_memory(mem: *mut ::libc::c_void) -> herr_t;
}
