/* automatically generated by rust-bindgen */

pub type Enum_H5S_class_t = ::libc::c_int;
pub const H5S_NO_CLASS: ::libc::c_int = -1;
pub const H5S_SCALAR: ::libc::c_int = 0;
pub const H5S_SIMPLE: ::libc::c_int = 1;
pub const H5S_NULL: ::libc::c_int = 2;
pub type H5S_class_t = Enum_H5S_class_t;
pub type Enum_H5S_seloper_t = ::libc::c_int;
pub const H5S_SELECT_NOOP: ::libc::c_int = -1;
pub const H5S_SELECT_SET: ::libc::c_int = 0;
pub const H5S_SELECT_OR: ::libc::c_int = 1;
pub const H5S_SELECT_AND: ::libc::c_int = 2;
pub const H5S_SELECT_XOR: ::libc::c_int = 3;
pub const H5S_SELECT_NOTB: ::libc::c_int = 4;
pub const H5S_SELECT_NOTA: ::libc::c_int = 5;
pub const H5S_SELECT_APPEND: ::libc::c_int = 6;
pub const H5S_SELECT_PREPEND: ::libc::c_int = 7;
pub const H5S_SELECT_INVALID: ::libc::c_int = 8;
pub type H5S_seloper_t = Enum_H5S_seloper_t;
pub type Enum_H5Spublic_Unnamed1 = ::libc::c_int;
pub const H5S_SEL_ERROR: ::libc::c_int = -1;
pub const H5S_SEL_NONE: ::libc::c_int = 0;
pub const H5S_SEL_POINTS: ::libc::c_int = 1;
pub const H5S_SEL_HYPERSLABS: ::libc::c_int = 2;
pub const H5S_SEL_ALL: ::libc::c_int = 3;
pub const H5S_SEL_N: ::libc::c_int = 4;
pub type H5S_sel_type = Enum_H5Spublic_Unnamed1;
#[link(name = "hdf5")]
extern "C" {
    pub fn H5Screate(_type: H5S_class_t) -> hid_t;
    pub fn H5Screate_simple(rank: ::libc::c_int, dims: *const hsize_t,
                            maxdims: *const hsize_t) -> hid_t;
    pub fn H5Sset_extent_simple(space_id: hid_t, rank: ::libc::c_int,
                                dims: *const hsize_t, max: *const hsize_t)
     -> herr_t;
    pub fn H5Scopy(space_id: hid_t) -> hid_t;
    pub fn H5Sclose(space_id: hid_t) -> herr_t;
    pub fn H5Sencode(obj_id: hid_t, buf: *mut ::libc::c_void,
                     nalloc: *mut size_t) -> herr_t;
    pub fn H5Sdecode(buf: *const ::libc::c_void) -> hid_t;
    pub fn H5Sget_simple_extent_npoints(space_id: hid_t) -> hssize_t;
    pub fn H5Sget_simple_extent_ndims(space_id: hid_t) -> ::libc::c_int;
    pub fn H5Sget_simple_extent_dims(space_id: hid_t, dims: *mut hsize_t,
                                     maxdims: *mut hsize_t) -> ::libc::c_int;
    pub fn H5Sis_simple(space_id: hid_t) -> htri_t;
    pub fn H5Sget_select_npoints(spaceid: hid_t) -> hssize_t;
    pub fn H5Sselect_hyperslab(space_id: hid_t, op: H5S_seloper_t,
                               start: *const hsize_t, _stride: *const hsize_t,
                               count: *const hsize_t, _block: *const hsize_t)
     -> herr_t;
    pub fn H5Sselect_elements(space_id: hid_t, op: H5S_seloper_t,
                              num_elem: size_t, coord: *const hsize_t)
     -> herr_t;
    pub fn H5Sget_simple_extent_type(space_id: hid_t) -> H5S_class_t;
    pub fn H5Sset_extent_none(space_id: hid_t) -> herr_t;
    pub fn H5Sextent_copy(dst_id: hid_t, src_id: hid_t) -> herr_t;
    pub fn H5Sextent_equal(sid1: hid_t, sid2: hid_t) -> htri_t;
    pub fn H5Sselect_all(spaceid: hid_t) -> herr_t;
    pub fn H5Sselect_none(spaceid: hid_t) -> herr_t;
    pub fn H5Soffset_simple(space_id: hid_t, offset: *const hssize_t)
     -> herr_t;
    pub fn H5Sselect_valid(spaceid: hid_t) -> htri_t;
    pub fn H5Sget_select_hyper_nblocks(spaceid: hid_t) -> hssize_t;
    pub fn H5Sget_select_elem_npoints(spaceid: hid_t) -> hssize_t;
    pub fn H5Sget_select_hyper_blocklist(spaceid: hid_t, startblock: hsize_t,
                                         numblocks: hsize_t,
                                         buf: *mut hsize_t) -> herr_t;
    pub fn H5Sget_select_elem_pointlist(spaceid: hid_t, startpoint: hsize_t,
                                        numpoints: hsize_t, buf: *mut hsize_t)
     -> herr_t;
    pub fn H5Sget_select_bounds(spaceid: hid_t, start: *mut hsize_t,
                                end: *mut hsize_t) -> herr_t;
    pub fn H5Sget_select_type(spaceid: hid_t) -> H5S_sel_type;
}
