/* automatically generated by rust-bindgen */

pub type Enum_H5Rpublic_Unnamed1 = ::libc::c_int;
pub const H5R_BADTYPE: ::libc::c_int = -1;
pub const H5R_OBJECT: ::libc::c_int = 0;
pub const H5R_DATASET_REGION: ::libc::c_int = 1;
pub const H5R_MAXTYPE: ::libc::c_int = 2;
pub type H5R_type_t = Enum_H5Rpublic_Unnamed1;
pub type hobj_ref_t = haddr_t;
pub type hdset_reg_ref_t = [::libc::c_uchar; 12usize];
#[link(name = "hdf5")]
extern "C" {
    pub fn H5Rcreate(_ref: *mut ::libc::c_void, loc_id: hid_t,
                     name: *const ::libc::c_char, ref_type: H5R_type_t,
                     space_id: hid_t) -> herr_t;
    pub fn H5Rdereference(dataset: hid_t, ref_type: H5R_type_t,
                          _ref: *const ::libc::c_void) -> hid_t;
    pub fn H5Rget_region(dataset: hid_t, ref_type: H5R_type_t,
                         _ref: *const ::libc::c_void) -> hid_t;
    pub fn H5Rget_obj_type2(id: hid_t, ref_type: H5R_type_t,
                            _ref: *const ::libc::c_void,
                            obj_type: *mut H5O_type_t) -> herr_t;
    pub fn H5Rget_name(loc_id: hid_t, ref_type: H5R_type_t,
                       _ref: *const ::libc::c_void, name: *mut ::libc::c_char,
                       size: size_t) -> ssize_t;
    pub fn H5Rget_obj_type1(id: hid_t, ref_type: H5R_type_t,
                            _ref: *const ::libc::c_void) -> H5G_obj_t;
}
